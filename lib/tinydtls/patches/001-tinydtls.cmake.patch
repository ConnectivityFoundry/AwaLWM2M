diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..c42591b
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,139 @@
+cmake_minimum_required(VERSION 2.8.2)
+Include (CheckIncludeFile)
+Include (CheckFunctionExists)
+Include (CheckTypeSize)
+set (DTLS_PSK 1)
+set (STDC_HEADERS 1)
+set (PACKAGE_BUGREPORT "")
+set (PACKAGE_NAME "libtinydtls")
+set (PACKAGE_VERSION "0.8.6")
+set (PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
+set (PACKAGE_TARNAME "${PACKAGE_NAME}")
+set (PACKAGE_URL "")
+#set (AC_APPLE_UNIVERSAL_BUILD 1)
+check_include_file (arpa/inet.h HAVE_ARPA_INET_H)
+check_include_file (assert.h HAVE_ASSERT_H)
+check_include_file (fcntl.h HAVE_FCNTL_H)
+check_function_exists (fls HAVE_FLS)
+check_include_file (inttypes.h, HAVE_INTTYPES_H)
+check_include_file (limits.h HAVE_LIMITS_H)
+check_include_file (malloc.h HAVE_MALLOC)
+check_include_file (memory.h HAVE_MEMORY_H)
+check_function_exists (memset HAVE_MEMSET)
+check_include_file (netdb.h HAVE_NETDB_H)
+check_include_file (netinet/in.h HAVE_NETINET_IN_H)
+check_function_exists (select HAVE_SELECT)
+check_function_exists (socket HAVE_SOCKET)
+check_function_exists (getaddrinfo HAVE_GETADDRINFO)
+check_include_file (stddef.h HAVE_STDDEF_H)
+check_include_file (stdint.h HAVE_STDINT_H)
+check_include_file (stdlib.h HAVE_STDLIB_H)
+check_include_file (strings.h HAVE_STRINGS_H)
+check_include_file (string.h HAVE_STRING_H)
+check_function_exists (strcasecmp HAVE_STRCASECMP)
+check_function_exists (strnlen HAVE_STRNLEN)
+check_function_exists (strrchr HAVE_STRRCHR)
+check_function_exists (strdup HAVE_STRDUP)
+check_function_exists (strerror HAVE_STRERROR)
+check_function_exists (vprintf HAVE_VPRINTF)
+check_include_file (sys/param.h HAVE_SYS_PARAM_H)
+check_include_file (syslog.h HAVE_SYSLOG_H)
+check_include_file (sys/socket.h HAVE_SYS_SOCKET_H)
+check_include_file (sys/stat.h HAVE_SYS_STAT_H)
+check_include_file (sys/time.h HAVE_SYS_TIME_H)
+check_include_file (sys/types.h HAVE_SYS_TYPES_H)
+check_include_file (sys/unistd.h HAVE_SYS_UNISTD_H)
+check_include_file (time.h HAVE_TIME_H)
+check_include_file (unistd.h HAVE_UNISTD_H)
+
+
+
+  
+set (CMAKE_EXTRA_INCLUDE_FILES netinet/in.h)
+check_type_size("struct in_pktinfo" SIZEOF_PKTINFO)
+if (SIZEOF_PKTINFO)
+  set (HAVE_PKTINFO 1)
+else ()
+  set (HAVE_PKTINFO 0)
+endif ()
+
+check_type_size("struct in6_pktinfo" SIZEOF_PKT6INFO)
+if (SIZEOF_PKT6INFO)
+  set (HAVE_PKT6INFO 1)
+else ()
+  set (HAVE_PKT6INFO 0)
+endif ()
+
+configure_file (dtls_config.h.cmake dtls_config.h)
+
+set (tinydtls_SOURCES
+  dtls.c
+  crypto.c
+  ccm.c
+  hmac.c
+  netq.c
+  peer.c
+  dtls_time.c
+  session.c
+  dtls_debug.c
+  aes/rijndael.c
+  sha2/sha2.c
+  ecc/ecc.c
+)
+
+# fetch the INCLUDE_DIRECTORIES properties of non-linked dependencies:
+# (it is not possible to link with an OBJECT library, so these are not automatic)
+#get_property (LIB_XML_INCLUDE_DIR TARGET libxml_static PROPERTY INCLUDE_DIRECTORIES)
+
+
+set (tinydtls_INCLUDE_DIRS
+  ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/aes
+  ${CMAKE_CURRENT_SOURCE_DIR}/sha2
+  ${CMAKE_CURRENT_SOURCE_DIR}/ecc
+)
+
+set (tinydtls_LIBS
+)
+
+if (ENABLE_GCOV)
+  set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -O0 --coverage")
+  set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} --coverage")
+endif ()
+
+if (DEBUG)
+  set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -O0")
+endif ()
+
+# From TinyDTLS Makefiles
+add_definitions (-DDTLS_PSK)
+add_definitions (-DDTLSv12)
+add_definitions (-DWITH_SHA256)
+add_definitions (-DNDEBUG)
+add_definitions (-DPOSIX)
+
+
+# static library libtinydtls.a
+add_library (tinydtls_static STATIC ${tinydtls_SOURCES})
+set_target_properties (tinydtls_static PROPERTIES OUTPUT_NAME "tinydtls")
+set_target_properties (tinydtls_static PROPERTIES POSITION_INDEPENDENT_CODE ON)
+target_include_directories(tinydtls_static PUBLIC ${tinydtls_INCLUDE_DIRS})
+target_link_libraries (tinydtls_static ${tinydtls_LIBS})
+
+# TODO - needed? c.f. libawa_static)
+#if (ENABLE_GCOV)
+#  target_link_libraries (tinydtls_static gcov)
+#endif ()
+
+# libtinydtls.so
+add_library (tinydtls_shared SHARED ${tinydtls_SOURCES})
+set_target_properties (tinydtls_shared PROPERTIES OUTPUT_NAME "tinydtls")
+set_target_properties (tinydtls_shared PROPERTIES POSITION_INDEPENDENT_CODE ON)
+target_include_directories (tinydtls_shared PUBLIC ${tinydtls_INCLUDE_DIRS})
+target_link_libraries (tinydtls_shared ${tinydtls_LIBS})
+
+install (TARGETS tinydtls_shared
+    LIBRARY DESTINATION lib
+)
+
